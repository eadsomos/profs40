%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (marina) ()%%Title: (11-109.eps)%%CreationDate: 3/9/11 11:24 AM%%BoundingBox: 107 16 482 402%%HiResBoundingBox: 107.9751 16.4219 481.4717 401.0303%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 283.5 211.6973 283.5 211.6973%AI3_TileBox: -22.5356 -183.4014 589.4648 608.5986%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 566.9291 425.1968%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -280.814 480.7393 1.5037 1829 1029 18 0 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 124 128 8%%BeginData: 25116 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45A87DA87DA87DA87DA87EA87DA8A8A87DA8A8A884FD4FA884A8A8A8%7DA8A8A87DA87EA87DA87DA87DA87DA87DA87DFFFF7DA87D847DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87EA87DA8A8A87DA8A8A87DA8A8%A884FD23A884A8A8A87EA8A8A87DA8A8A87DA8A8A87DA87EA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87D7E7D7EA8FFA87DA87DA87DA8%7DA87DA87EA87DA8A8A87DA8A8A87EFD4BA87EA8A8A87DA8A8A87DA8A8A8%7DA87DA87DA87DA87DA87DA87DFFFF7D847DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA884A87DA8A8A87DA8A8A87DA8A8%A87DA8A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A884A8A8A87D%A8A8A87DA8A8A87DA8A8A87DA884A87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87D847DA87D7DA8FFA87DA87DA87DA8A8A87DA8%A8A884FD24A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8AFA8A8A8A9FD22A8%84A8A8A87DA8A8A87DA87EA87DA87DA87DFFFF7DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA884A87DA8A8A87DA8A8A884FD3BA884A8A8A87DA8A8%A87DA87EA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7DA8FFA87DA8%7DA87EA87DA8A8A87DA8A8A87EFD57A884A8A8A87DA8A8A87DA884A87DA8%7DA87DA87DFFFF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA8A8A87DA8A8A87DA8A8A884FD2FA884A8A8A87DA8A8A87DA8A8A87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D84A8FFA884A8%7DA8A8A87EFD1CA8AFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A9A8FFA8%A9A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8A9FD1AA8%84A8A8A87DA884A87DA87DFFFF7DA87DA87DA87DA87DA87DA87DA87EA87D%A8A8A87DFD4BA884A8A8A87DA8A8A87DA87EA87DA87DA87DA87DA87DA87D%A87DA8A8FFA87DA8A8A87DA8A8A87DFD20A8AFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8A9FD1EA87EA8%A8A87DA8A8A87DA87DA87DFFFF7DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA8A8A87DA8A8A87EFD43A87DA8A8A87DA884A87DA87DA87DA87DA87D%A87DA87DA87DA87DA87D7EA8FFA87DFD18A8A9A8A8A8FFA8A8A8FFA8A8A8%FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8A8A8FFA8A8A8FFFD1AA87DA8A8A8%7DFFFF7DA87DA87DA87DA87EA87DA8A8A87DA8A8A884FD53A884A8A8A87D%A8A8A87DA87DA87DA87DA87DA87DA8A8FFA8A8A87DFD1CA8AFA8A8A8FFA8%A8A8FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8AFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8A9FD1AA87DA8A8A87DA8%7DFFFF7DA87DA87DA87DA87DA87DA87DA8A8A87DA8A8A87EFD4FA87DA8A8%A87DA884A87DA87DA87DA87DA87DA87DA87DA8A8FFFD14A8A9A8A8A8FFA8%A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8A9A8FFA8A8A8FFFD16A884A884FFFF7DA87DA87DA884A87DA8A8%A884FD1CA8A9A8A8A8AFA8A8A8FFA8CFA8FFA8A8A8A9A8A87EA97EA8A8A9%A8AEA8FFA8A8A8FFA8A8A8A9FD1EA87EA8A8A87DA87EA87DA87DA87DA8A8%FFA87DFD18A8AFA8A8A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8%FF847F545B3131092B092B092B092B0831315B5AA9A8FFA8FFA8FFA8FFA8%FFA8FFA8A9A8FFA8A8A8FFA8A8A8AFFD16A87EA8A8A87DFFFF7DA87DA87D%A87DA87EA87DA8A8A87DFD1EA8CFA8A95A55082B03090309030903090309%03090309030903F9032B2A5B7EA8A8CFFD1CA87DA8A8A87DA87DA87DA87D%A87DA87DA8A8FFFD12A8FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFCFA95A550909092B092B092B092B092B092B092B092B092B09%2B092B0909F92B2B7F7EFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8%FFA8A8A8AFFD12A87DFFFF7DA87DA8A8A87DFD1CA8FFA8A8A8FFA8CF7E5B%0809082B0809082B0809082B0809032B0809032B0309032B0309032B0309%0309F9092A7FA8CFA8FFA8A8A8A9FD16A884A8A8A87DA8A8A87DA87DA8A8%FFFD14A8AFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A93109092B09%2B0931092B092B092B092B092B092B092B092B092BF92B092BF92B092BF9%2BF909F9317EFFA8FFA8FFA8FFA8AFA8FFA8A8A8FFFD19A8FFFF7DA87DA8%7DA8A8A87DA8A8A884FD18A8CF7E3108090809082B0809082B080908310E%15141B151B141B151B14150E0F082B0809032B0309032B030903F92A7EA8%CFFD16A87EA8A8A87DA884A87DA87DA87DA8A8FFFD0CA8AFA8A8A8FFA8A8%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFF5B31093109310931092B0931%0F37151B1B433D676167618B618B61673D3D1B3D1B1B1531092BF92B092B%F92B092BF95584FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD11A8FF%FF7DA8A8A87EFD18A8FFA8A8A8FFA87F0809090908310909082B0F151BFB%1B3D608BA8AFA8FFA8FFCAFFCAFFA8FFA8A984853C3D141B150F082B0309%032B0309032B54A8A8FFA8A8A8A9FD16A87DA8A8A87DA8A8FFFD12A8FFA8%A8A8FFA8AFA8FFA8FFA8FFA8FFA85B090F09310931092B09371BFB3D6784%FFA8FFCAFFCAFFA8FFA8FFA8FFA8FFA8FFCAFFCAFFA8AF603D1B1B0F31F9%2BF92B092BF9092BA9A8FFA8FFA8FFA8A9A8FFA8A8A8AFFD12A87DFFFF7D%A87DA8A8A87DFD18A8CF843108310809082B080F0E1B1B4360AFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8853C1B141508F9%032B030903F9037FA8CFFD12A884A8A8A87DA8A8A87DA87DA8A8FFFD0AA8%FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FF7E3109310931093109%371B433C8AA9FFCAFFA8FFA9FFA9FFAFFFA8FFCACFA8FFCAFFA8FFAFFFA9%FFA8FFA8FFCFFFA8611B1B0F2BF92BF92B092BF97FA8FFA8FFA8FFA8FFA8%FFA8FFA8A9A8FFA8A8A8AFFD0BA8FFFFA8A884FD14A8AFA8A8A8FFA8CF5A%0F090F083109090E3DFB3C34817BFFA8FFA8FFA8FFA8C9A6CDFD09C7C8A6%C9A7CFA8FFA8FFA8FFA8FFA8AF3C1B14310309032B03090355A8CFA8FFFD%16A87DFD04A8FFFD0CA8A9A8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FF5A0F09%310931093115431B5F57815781A7FFA9FFCACEC8CCC7C7C6FD0BC7C6C7C7%C8C8CFA8FFA8FFA8FFA8FF843D1537092BF92B092BF955A8FFA8FFA8FFA8%FFA8A8A8FFFD11A8FFFF7DA8A8A87DFD16A8CF540F080F0831080F15FB19%5D5681577B5681A8CEA5C7C6C7C6FD0FC7C6C7C6C7C0C7A7FFA8FFA8FFA8%FFA861141508F9032B03090331A8CFFD14A87DA8A8A87DA8A8FFFD08A8FF%A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF5A0F0F31093109311B433B81%7B815781578181CDC7CCC7CCC7CCC7CCC7CCFD0BC7CCFD05C7CFA9FFA8FF%A8FFA8FFCAAF1B1B092B092BF92BF955A8FFA8FFA8FFA8FFA8FFA8AFA8FF%A8A8A8FFFD09A8FFFF84FD14A8FFA8A8A8FF5A0F0831090F08371BFB3481%578157815781A5FD09C7C1C198C1BABB98C1BABB98C1C0C1C0C7C7C7C6C8%A9FFA8FFA8FFA8FFA8FFA8AF36150E2B0309032B0355A8FFA8A8A8A9FD12%A87EA8A8FFFD0AA8AFA8A8A8FFA8A9A8FFA8FFA8FFA8FF7E310F31093109%371B435D815781578157A5C7CCC7CCC7CCC7C7C1C1BAC1BBC1BAC1BBC1BA%C1BAC1BAC1BABBBAC1C1C7A7FFAFFFA8FFA8FFA8FFA8FFCAFF3D1B0F2B09%2BF92BF95BA8FFA8FFA8FFA8A8A8FFA8A8A8A9FD0BA8FFFFA8A87DFD14A8%CF840F0831080F08371B3C5781578156817BFD07C7C0C198BB98BB98C198%BB98BB98BB98BB98BB98C198BB98BB98BBA0CAA9FFA8FFA8FFA8FFA8FFA8%FF361B0E2B03090309037FFD14A87DFD04A8FFFD06A8FFA8A8A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA83709310F3109371B43578181815781A5CCC7CCC7%CCC7C7BBC1BAC1C1C1BAC1BBBBB5BCB5B6B5B6B5BBB5BBBBC1BAC1BBC1BA%BBBBC9A8FFFFFFA8FFA8FFA8FFCAFF3D1B0F2B092B092BF9A9CFFFA8FFA8%FFA8FFA8FFA8FFA8A8A8FFFD07A8FFFFFD0FA8A9A8A8A8FFA8A8A85B090F%0831090F1B43578157815781A5CCC7C7C7CCC1C198C1BAC198BBB5B5B5B6%B5B5B0B5B5B5B0B5B5B5B0B5B5B592BBBABB98BBBABBA1FFA9FFA8FFA8FF%A8FFA8FF361B0909032B03F92AFFA8A8A8A9FD13A8FFFD08A8FFA8A8A8FF%A8FFA8FFA8FFA8FFCAA90F310F310F311B435D8181815781A5CCC7CCC7C7%C0C1BBC1BAC1BBB5B5B6B5B6B5B6B5B5B5B6B5B5B5B6B5B5B5B6B5B5B5BB%BBC1BAC1BABBC2FFAFFFA8FFA8FFA8FFCAFF371B092BF92B090954FFA8FF%A8FFA8A9A8FFA8A8A8AFFD09A8FFFF7DFD14A8AF0E0F08310E0F15FB5E81%57815781A5CCFD04C798BB98C198BB93B5B5B593B5B5B58DB5B5B5B0B5B0%B58DB5B5B58DB5B5B5B0B5B5BB98BB98BA99CAA9FFA8FFA8FFA8FFA8A914%150809032B03097ECFFD12A87DA8A8FFFD04A8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FFA8FF5B0F0F310F3115433BFD0581A5CCC7CCC7C7C1C1BAC1BBBC%B5B6B5B6B5B6B5B5B0B6B5BCB6BCB6BCB5B6B5B5B0B6B5B6B5B6B5B6B5BB%BBC1BAC1BBCAAFFFFFFFA8FFA8FFCAAF1537F92B092BF931A8FFA8FFA8FF%A8FFA8FFA8FFA8A8A8FFFD05A8FFFFFD0DA8A9A8A8A8FFA8CF84310F0F0E%310FFB1A817B815781A5CCC7CCC7C798C1BAC1B5B6B5B5B5B6B5B5B0B5B6%C3A1CAA8FFA8FFA8FFA8CAC3BCB5B5B0B5B0B5B5B5B0B5BABB98BBBAC9A9%FFA8FFA8FFA8FFA885150F032B0309037FA8A8A8AFFD11A8FFFD06A8FFA8%A8A8FFA8FFA8FFA8FFA8FFCA5B0F310F310F3DFB827BFD0481CCC7CCC7C7%BBC1C0C1B5B6B5B6B5B6B5B5B6C3CAFD0BFFAFFFFFFFC3BCB5B5B5B6FD04%B5BBC1BAC1BAC9AFFFA9FFA8FFA8FFA73C152BF92B090908FFA8FFA8FFA8%AFA8FFA8A8A8AFFD07A8FFFFFD13A8A90E0F0E3108151B5F7A8157817BC7%C7CCC7C798C198C193B6FD04B5B0B6A1FFAFFFAFFFA8FFA2C4A2C4A1CAA8%FFAEFFAFFFA8CAB6B58DB5B5B58DB5B4BB98BB98CAA9FFA8FFA8FF837B33%1B0F09032B03F954CFFD13A8FFA8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF%A8FF5B0F0F370F311B43FD0581CCC7CCCCC7BAC1C1C1B5B6B5B6B5B6B5C3%CAFD04FFCBBDB7B1B2B1B1B1B2B1B7B6BEC4FD05FFC3BCB5B6B5B6B5B6BB%C1BBBBBBFFFFFFA8FF82815781353D092B092BF92BA8FFA8FFA8FFA8FFA8%FFA8FFA8A8A8FFA8A8A8FFFFFD0BA8A9A8A8A8FFA8CF840F0F0F0E3115FB%5E817B8157A5C7CCC7CCC0C198C1B5B6B5B6B5B5B5CAAFFFAFFFBDB7FD0C%B1B0B1B1BDA8FFAFFFA8BCFD06B592C1BABA99FFA8FFA881568156811415%032B0809037FA8A8A8AFFD0FA8FFFD04A8AFA8A8A8FFA8FFA8FFA8FFA8FF%CA5B0F370F310F433CFD0481A5C7CCC7CCFD04C1B5B6B5B6B5B6BCFD04FF%C4B2B2B1B2B1B2B1B2B1B2B1B1B1B2FD06B1BDFD04FF948DB6B5B6B5B5BA%C1BBBAA0FFFFFF82815781565F1531F92B09092AFFA8FFA8FFA8A9A8FFA8%A8A8A9FD05A8FFFFFD11A8A90E0F0E310E151B5E7A815781A5CCC7CCC1C1%98C1BBB6B5B6B5B594FFAFFFA8BDB1B1B1B2B1B1B1B2FD0EB18EC4FFA844%698DB58DB5B0B598BB98BBA7FFA8CF57815781563D0F09032B03097ECFFD%11A8FFFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FF840F0F370F371B438181%818281CCC7CCC7C1C0C1BBB6B5BCB5B5BCFFFFFFCAB7B1B7B1B7B1B2B1B2%B1B2B1B2B1B2B1B2B1B2B1B2FD05B1C47069696993B6B5B6B5BBBAC1BAC2%FFFFFFAD57815781353D092B092BF95BCFFFA8FFA8FFA8FFA8FFA8FFA8A8%A8AFA8FFFFFD09A8A9A8A8A8FFA8A8A85B0F0F0E3115FB3A81818157CCC7%CCC7C7BAC198BCB5B6B5B5B5FFAFFFC4B2B1B7B1B2B1B2B1B2B1B2B1B1B1%B2FD0DB169686969698DB5B5B5B0BBBABB98C9AFFFA8815681565D140F03%2B080908A9A8A8A8A9FD0DA8FFA8A8AFA8A8A8FFA8AFA8FFA8FFA8FFA8AF%0F370F370F3D1F82818281A5C7CCCCCCC0C1C1BBB5BCB5B6B5CAFFFFC4B7%B2B7B1B7B2B7B1B7B1B28F906C6C486C6C908EB2B1B1B1B2B1B1B1B2B18D%6969698DB5B6B5B6B5C1BBBBC1FFFFFF83815781563C152B092B09097EFF%A8FFA8FFA8A8A8FFFD07A8FFFFFD0FA8FF7E0F0E370E151B3C7A817B81A5%CCC7CCC0C198C1B5B6B5B6B5C3AFFFA8B7B1B7B1B7B1B7B1B28F6C484948%49484924492449488FB1B18DB1B1B18DB18E696869688DFD04B592C198BA%A1FFA8A857815781341B0809032B0355FD11A8FFA8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFCF610F370F3715435EA5818281CCC7CDC7C1C1C1BBB6B5BCB5%BCFFFFFFBEB2B7B7B7B2B7B2B76C6D496D496D496D496D49494849496C8F%C4C4CABEB7B1B28EFD0469B6B5B6B5BCBBC1BAC2FFFFCBA7578157821A37%092B092B2BFFA8FFA8FFA8FFA8FFA8A9A8FFA8A8A8FFFFFD0BA8FFA8A8A8%FF370F0E370F1B1A82818157A5C7CCC7C7BAC198BCB5B6B5B5C3FFAFC4B2%B7B2B7B2B7B1B76C49486D496D484823472348484948494FCBFD05FFC4B1%B1FD0569B5B5B5B0BBBABB98CFA9FFA7815781563C1509082B08097EFFA8%A8A8A9FD0BA8FFFD04A8FFA8A8A8FFA8FFA8FFA8FFA8370F370F371B4281%828181A5CCC7CCC1C1C1BBB5BCB5B6BCFFFFFFFD04B7B2B7B7B86CFD046D%482100FD05F821234949FD08FFC4B1B1FD046993B6B5B6B5C1BBBAA0FFFF%FF57817B81343D092B092B097FA8FFA8FFA8FFA8A8A8FFFD05A8FFFFFD0D%A8A9A8850E370F0F0EFB3B817B8181CCC7CCC7C198C1B5B6B5B6B5CAAFFF%BDB7B2B7B2B7B1B76C6D486D4821FD0BF8A2FD08FFCAB7B18E6869698DFD%04B598C1BAC1A8FFA8825681565E14310309030930CFFD0FA8FFFFA8A9A8%FFA8FFA8FFA8FFA8FFA8FF5A370F370F3DFB8281A681A6C7CCCCC7C1C1C1%BCB5BCB5BCFFFFCBB7B7B8FD04B76C736D9747FD0CF826A8FD09FFBDB1B1%8E696969B6B5B6B5BBBAC1BBFFFFFF83818181573D152B092B0955A8FFA8%FFA8FFA8FFA8FFA8A8A8FFA8FFFFFD09A8FFA8A8A8FFA85B0F370F0F1543%FD0481A5CCC7CCC1C19EC1B5B6B5B6C3FFAFC4B2FD05B78F736C6D47FD0E%F8FD0AFFC4B1B18D6969698DB6B5B5B5C1BABAA1FFA9A856815781351508%09080908A8A8FFFD0DA8FFA8A8FFA8A8A8FFA8FFA8FFA8FFA8FF37150F37%0F3D3C82818181CDCCCCC7C7C1C1BBBCB5BCB5C4FFFFBDB8FD05B7976D97%6C21FD0DF827FD0AFFBDB1B1B1698D6993B5B6B5B5BAC1BAC9AFFFA88157%817B5F1531092B092BA8FFA8FFA8FFA8FFA8A8A8AFA8A8A8FFFFFD0FA837%0F150E371B3CFD0481A5CCC7CC9EC19EBBB5BCB59469949BFD06B7966D6D%6D22FD0FF8A8FD09FFB7B1B1B169686969FD04B5BB98BA9FFFA8FF7B8156%81341B082B080903A9FD0FA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8AF3737%0F3715433BA5818281CDCCCCC7C1C1C1B5BCB6BC8D8E8D8EB7BEB7B8B7BE%96976D73FD10F852FD08FFCBB1B2B1B28D8D698DB5BCB5B6BBC1BAC1A8FF%FFA65781815E1531092B092B7EFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFFFD%07A8A9A8A8A8FFA8CF84370F150E371B5F81828181C7CCC7C79EC1C1B6B5%BCB58E698E8EB8B7B8B7B795976D9746FD11F87DFD07FFB1B1B1B2B18E69%6969B5B5B6B5BB98C1BBFFA8FF82815781571B0E2B0809037FA8A8A8AFFD%0BA8FFA9A8A8A8FFA8AFA8FFA8FFA8FFCAA90F37153715435FA5818281CC%C7CCC7C1C0C1B6BCB5BC8E8E69B7B7BEB7BEB7B86D979722FD12F852FD04%FFA38FB2B1B2B1B28E69698D93B6B5B6BBC1BAC1CAFFCBA757817B821B37%093109095AFFA8FFA8FFA8A8A8FFFD05A8FFFFFD0DA8FF84150E370F151B%5F818181A5C6CCC6C798C198B6B5BC938E698E8EBEFD04B795976C97FD15%F827486D246CFD06B169696993B5B5B0BB98BB98CAA8FF82815781573D0F%09082B085BFD0FA8FFFFA8AFA8FFA8FFA8FFA8FFA8FFCAA90F3715371543%5FA581ACA6CFCECFC1C1C0C2B6BCB5BC8E8E69B7B8BEB7BEB7B86D976D21%FD15F84873A9CBCBB7B2B1B2B18D698D93BCB5B6BBC1BAC1CAFFFFAD8181%7B821A37093109095AFFA8FFA8FFA8FFA8FFA8A9A8FFA8FFFFFD09A8FFA8%A8A8FF84150E370F151B65818181A7A9FFA9C1C0C1BBBCB5BC938E698E8E%BEB7B8B7B896A3A3CBFD16F847FD05FFB7B1B1B169696993B5B5B5BBBABB%98CFA9FF83815781573D0F09082B095BA8FFFD0DA8FFA8A8FFA8A8A8FFA8%FFA8FFA8FFA8A915370F3715435EA5818182FFFFFFFD04C1B5BCB6BC8D8E%8DB7B7BEB7BEB7BEFFFFFF27FD15F8A2FD05FFCAB1B28E8D69698DBCB5B6%B5C1BAC1A8FFFFA7578181821A37092B09095AFFA8FFA8FFA8FFA8A8A8AF%A8A8A8FFFFFD0DA8CF84150F150E371B5F818181A6A8FFA8C898C1BBB6B5%BCB58E698E8EBEB7BEB7B7B7FFFFFF27FD14F800A2FD05FFC4B1B18E6969%6993B5B6B5BB98C198CFA8FF82815781571B0E2B0809087FFD0FA8FFA8A8%FFA8FFA8FFA8FFA8FFA8FFA8AF5B8584FF85FB5FAC81A682FFFFFFC2C1C1%C1B6BCB6BC8E8E8E95BEBEB8BEB7BECBFFFF7DFD14F822A3FD05FFC4B1B2%8E8E698D93BCB5B6BBC1BAC1A8FFFFA7578181821B370931092B7EFFA8FF%A8FFA8FFA8FFA8FFA8A8A8FFFFFD07A8A9A8A8A8FFA8A8A8FFCAFFCA8B1B%6081A68182A8FFAFC99EC1C1BCB5BCB58E698E8EBEB7BEB7B8B7CBFFFFA8%FD14F8486DCBFFFFFFCBB1B2B18E698D69B5B5B6B5BB98C1C1FFA8FF8281%5781581B0E2B09090885A8A8A8AFFD0BA8FFA9A8A8A8FFA8A9A8FFA8FFA8%FFA8FFA8FFA8FF84FB3CA581AC81CFA9FFC9C1C0C1BBBCB5BC948E8E8EB7%BEB7C4C4CBFD04FF52FD12F8216D6D6DC5C4C4B7B2B1B7698D6994B5B6B5%BCBBC1BAC8FFFFA88281817B5F1B31093109097EFFA8FFA8FFA8A8A8FFFD%05A8FFFFFD0DA8AFA8A8A8FFA8AF1B42FD0481A7FFA8CA9EC19EBBB5BCB5%B6698E69B7C4CBA8FFFFFFA8FFFFFFFD12F8486D6C6D8FB2B1B2B1B28E69%69698DB6B5B593C198BAA0FFA8AE57815781351B0809080908FD10A8FFFF%A8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA7AB81AC81ADCBFFCFC7%C0C7BBBCB6BCB68E8E8E94FD0BFFFD10F847976D7390B7B2B7B2B7B2B669%8E69B6B5BCB5BCC1C1BACAFFFFA7FD048160153109310931A8FFA8FFA8FF%A8FFA8FFA8A9A8FFA8FFFFFD09A8FFA8A8A8FFA8A8A8FFA8FFA8AD818181%A582FFA8FFC1C19EC1B5BCB5BC8E8E8D8EA2FFA8FFFFFFA9FD04FFA8FD0E%F847976D6D6CB7B1B7B1B7B2B7698D698DB5B6B5B6BBC1BAC1A8FFA9A756%817B811A370909080930CFA8FFFD0DA8FFA8A8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8AC81AC81ACAEFFAFC9C0C1C0BCB6BCB5B68E8E8DBD%FD0CFF52FD0AF85172976D976DFFC4B7B2B7B2B78E8D698E8DBCB5BCB5C1%BAC1C1FFA8FF828181815E3D0F310931095BCAFFA8FFA8AFA8FFA8A8A8AF%A8A8A8FFFFFD0FA8FFA8A8A8FFA8CF81A5818181AEA9FFA7C19EC199BCB5%BCB58E8E8E69CAFFFFA8FFFFFFA8FD05FFA852FD05F827277DFFFF6C6D6C%CBFFFFA2B7B1B78E8E696969FD04B5BB98C198C9A9FFA8817B817A5F1B0F%083108095ACFFD0FA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA9AD81AC81ACA7FFA9FFC2C1C1C7BCBCB6BCB68E8E8E94FD0FFFA8A8A8%FD06FFC597FD05FFCAB7B2B6698E699BCABCB5BCBBC1BAC1CAFFCBCF8181%81A53C3D0931093109A9CAFFA8FFA8FFA8FFA8AFA8FFA8A8A8FFFFFD0BA8%FFA8A8A8FFA8A8A8FFA8FFA7A581A7A8FFA8FFA9C9C0C19EC1B6BCB5BC8E%8E8D8E9BFFA8FFFFFFA8FD0FFFCBFFFFFFCFFFFFFFA8FFCAB7698E698DA8%FFA8C3B5C1BABA9FFFA8FF82818181573D150908310931A8FFA8A8A8A9FD%0BA8FFFD04A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA7FFFFFFA8%FFFFFFA8C8C1C1C1BCB6BCB6BCFD048EA2FD1FFF8E8E698D9BFFA8FFFFC8%BAC1BACAA9FFA8818182815F1B370931090F5BFFA8FFA8FFA8FFA8A8A8FF%FD05A8FFFFFD11A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA6C19EC199BCB5%BCB5B68E8E698EA2FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFA8FFA8FFFFFF698D69696AFFA8FFA9CA98C198C2A8FFA8A757817B813B%1B0831080F0885FD11A8FFFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFFFFA9FFC1C1C1C7BCBCB6BCBCB6FD048EA2FD1B%FF948E8D8E69FD05FFC1C1BAC1C9FFA9FF818181A55E4315310F310931A8%FFA8FFA8FFA8FFA8FFA8FFA8A8A8AFA8FFFFFD0DA8FFA8A8A8FFA8A9A8FF%A8FFA8FFA8FFA8FFA8FFA9CAC0C19EC1B5BCB5BCB6FD058E9BFFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FFCA698D698E69CAAFFFA8FFA0%C1BAC09FFFA8FF838181817A5F1B0F0831090930FFA8A8A8A9FD0DA8FFFD%06A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFAF%C8C0C1C0C2B6BCB6BCB6FD058E95FD16FFC3698E8D8E69CAFFFFA8FFCAC1%BAC1C1CFA9FFA882818281821A3D0931093109A9A8FFA8FFA8FFA8A8A8FF%FD07A8FFFFFD13A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8C1C0C7A7BCB5%BCB5BCA19569FD048EC4A8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA194%698E698D69A2AFFFA8FFA8C198C198C9A9FFA8A781817B813B1B0E31080F%0831FD13A8FFA8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFFFFFA8FFC9C8A8FFCABCB5BCCAFFCABDFD058E959BCBFD%0CFFCBC4948E8D8E8D8E8ECAFD04FFCAC8BAC1BAC8FFFFCBCF818181A681%4315310F310F0F7EFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFFFFD0B%A8A9A8A8A8FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FF%A8BCA1FFA8FFAEC4FD068E8D959BC4A2FFA8FFA8CAA2A1948E698E698E69%8D94FFFFFFA8FFAFC898C1BAC1A8FFA8FFFD048180601B0F0831090F0EAF%A8A8A8AFFD0FA8FFFD04A8A9A8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FFCB958E8DFD08%8E94FD048E8D8E8D8E8E8E6995A2FD05FFA8FFCFC8BAC1CAFFA8FFA78181%8281821B3D0F310F31097FA8FFA8FFA8FFA8A8A8FFFD09A8FFFF84FD14A8%FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFFA2%9B8E8E8D8E698E8D8E698E8D8E698E698E698E94A2A8FFA8FFA8FFA8FFA8%FFA9C9A7FFA8FFA7FD05811A1B0E31080F0831FD12A87EA8A8FFFD04A8FF%A8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFF%A8FFFFFFA8FD0DFF9BBDFD048E8D8E8E8E8D8E8E8E94C4A8FD09FFA8FFFF%FFAFFFFFFFA8AC81A681A53BFB15310F310F0F7EFFA8FFA8FFA8FFA8FFA8%FFA8A8A8FFFD05A8FFFFFD0DA8A9A8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAEFFAFCBA2C49B9B%959B959B9BC4A8FFAFFFAEFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8828182%81A55EFB1B0F08310F0F30FFA8A8A8A9FD11A8FFFD06A8A9A8A8A8FFA8A9%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFF%A8AC818281A581431B8B7E0F0F310FA9A8FFA8FFA8FFA8A8A8FFFD0BA8FF%FFFD17A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA882FD05813C1B61A8FF7E0F085BFD12A884FD04A8FFFD06A8%FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAF%FFA8FFFFFFA8FFFFFFA8FFFFFFAFFD17FFA8FFFFFFA8FFFFFFA8FFA8AC81%AC81A681421B67A8FFA8FF7E5BA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD%07A8FFFFFD13A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA7FD0481A6813C1B43A8CAA8FFA8CFA8FFA8A8A8%A9FD13A8FFFD08A8A9A8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FFA68181AC81A681651B%43A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD0DA8FFFF7DA8A8A884FD%14A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A7FD0581%8281A5834384CAA8FFFD16A884A8A8A87DA8A8FFFD08A8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A9FFA8AD81AC81AC81AC81ACA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8A8FFFD09A8FFFF84FD14A8FFA8A8A8FFA8A8A8FFA8A9A8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8AE82A6818181A6818181ACA8FFA8FFA8A8A8FF%A8A8A8FFFD16A87DA8A8FFFD0EA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA7A581AC81AC81AC81ADA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD0FA8FFFF84A87DA8A8A884FD%14A8A9A8A8A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF818181A6818182AEA8%A9A8FFA8A8A8AFFD16A87DA8A8A87DA87EA8A8FFFD0AA8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFCBAD%81AC81ACA7FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF%A8A8A8FFFD0BA8FFFFA8A884FD14A8A9A8A8A8FFA8A8A8FFA8A8A8FFA8A9%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8A681ADA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8AFFD16%A87DFD04A8FFFD10A8FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8A8FFA8A8A8AFFD11A8FFFF7DA884A87DA8A8A87EFD18A8A9A8A8A8FF%A8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8A9A8FFA8A8A8FFA8A8A8FFFD1AA87DA8A8A87DA87DA87D%A8A8FFFD0CA8FFA8A8A8FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8A9A8FFA8A8A8AFFD0DA8FFFF7DA8A8A87DFD18A8AFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8AFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD1AA8%7DA8A8A87DA8A8FFFD12A8A9A8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A8%A8FFFD16A87DFFFF7DA87DA87DA87DA8A8A87DFD20A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8A9FD%1AA884A8A8A87DA8A8A87DA87DA87DA87DA8A8FFFD0EA8A9A8A8A8FFA8A8%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A8A8FFFD12A87DFFFF7DA8%7DA8A8A87DFD1CA8AFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD1AA8%84A8A8A87DA884A87DA87DA8A8FFFD18A8AFA8A8A8FFA8A8A8FFA8AFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A8A8FFA8A8A8AF%FD16A87DA884FFFF7DA87DA87DA87DA87DA884A87DA8A8A87EFD28A8A9A8%A8A8A9FD2AA87DA8A8A87DA884A87DA87DA87DA87DA87DA8A8FFFD14A8AF%A8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8AFA8FFA8A8A8FFA8A8A8AFFD15A8FFFF7DA87DA87D%A884A87DA8A8A87EFD20A8A9A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8%A8FFA8A8A8FFA8A8A8AFA8A8A8A9FD1EA87DA8A8A87DA87EA87DA87DA87D%A8A8FFA87DA8A8A8A2FD18A8AFA8A8A8FFA8A8A8FFA8A8A8FFA8AFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8%FFA8A8A8FFA8A8A8FFA8A8A8AFFD1AA87DA8A8A87DFFFF7DA87DA87DA87D%A87DA87DA87DA87DA8A8A87DA8A8A884FD4BA884A8A8A87DA8A8A87DA87D%A87DA87DA87DA87DA87DA87DA8A8FFA87DFD18A8AFA8A8A8FFA8A8A8FFA8%A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8A8A8FFA8A8A8AFFD%16A884A8A8A87DFFFF7DA87DA87DA87DA87DA87DA8A8A87DA8A8A884FD53%A87EA8A8A87DA884A87DA87DA87DA87DA87DA87DA8A8FFA8A8A87DA8A8A8%7DFD1CA8A9A8A8A8AFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8AFFD1EA87EA8A8A87DA8A8A8%7DA87DFFFF7DA87DA87DA87DA87DA87DA87DA87DA87DA87EA87DA8A8A87D%A8A8A884FD3FA87EA8A8A87DA8A8A87DA87EA87DA87DA87DA87DA87DA87D%A87DA87DA87DA8A8FFA8A8A87DA8A8A884FD18A8AFA8A8A8FFA8A8A8FFA8%A8A8FFA8A9A8FFA8A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A9A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8A9FD1AA87DA8A8A87DA87DFFFF7D%A87DA87DA87DA87DA87DA87DA87EA87DA8A8A87DA8A8A884FD47A87EA8A8%A87DA8A8A87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFA87DA87EA8%7DA8A8A87DA8A8A87EFD28A8A9A8A8A8AFA8A8A8AFA8A8A8A9FD26A884A8%A8A87DA8A8A87DA87EA87DA87DA87DFFFF7DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87EA87DA8A8A87DA8A8A87DA8A8A884FD2BA884%A8A8A87DA8A8A87DA8A8A87DA87EA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87D7DA8FFA87DA87EA87DA8A8A87DFD24A8AFA8A8A8FFA8%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8AFFD22A87EA8A8A8%7DA884A87DA87DA87DFFFF7DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87EA87DA8A8A87DA8A8A87EFD37A884A8A8A87DA8A8A87DA8A8A87DA87E%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7DA8FFA87DA87DA87DA8%7DA87EA87DA8A8A87DA8A8A87EFD4FA884A8A8A87DA8A8A87DA884A87DA8%7DA87DA87DA87DA87DFFFF7DA87D847DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA884A87DA8A8A87DA8A8A87DA8A8A87D%A8A8A87EA8A8A884A8A8A884A8A8A884A8A8A87EA8A8A87DA8A8A87DA8A8%A87DA8A8A87DA884A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA8FD047DA8FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--10 Bn%AI5_BeginGradient: (New Gradient Swatch 1)(New Gradient Swatch 1) 0 2 Bd[<8C8D8E8E8F90919293949495969697979899999A9B9B9C9D9E9FA0A1A1A2A2A2A2A2A2A3A3A3A3A3A3A3A3A3A4A4A4A5A5A6A7A7A8A8A9A9AAAAAAABABACACACADADADAEAFAFB0B0B1B1B2B2B3B3B4B5B5B6B7B8B9B9BABABBBCBCBDBEBFC0C0><000000000000000000000000000000000000000000000000000000000000000000000103040507090B0D0F11131516181C1E20222426282A2C2E2F31333537393B3D3F41434546484A4C4E4F51535557595B5C5E6061636567696A6C6E6F7172><14131212111110100F0E0D0C0D0C0B0A0908070706050404030201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>00<E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988><FEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFA>4 %_Br[0.752941 0.447059 0 0 0 0.533333 0.980392 2 50 100 %_BS%_0.752941 0.447059 0 0 0 0.533333 0.980392 2 50 100 Bs0.54902 0 0.078431 0 0 0.909804 0.996078 2 50 0 %_BS%_0.54902 0 0.078431 0 0 0.909804 0.996078 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (New Gradient Swatch 4)(New Gradient Swatch 4) 0 2 Bd[<00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010102020202030303030303030304040404050505050505050505050505><A8A7A6A4A3A2A09F9D9C9B999896959392908F8D8C8A898786848381807E7D7C7A7978767573716F6D6C6B696866656462615F5E5D5B5A595756545352504F4E4C4B494746454342403F3D3C3A3837><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFDFD>00.980392<7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6><00000001010101010102020202020303030303030404040404040505050505060606060606070707070708080808080809090909090A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0D0E0E0E>4 %_Br[0.019608 0.215686 0.992157 0 0.980392 0.776471 0.054902 2 50 100 %_BS%_0.019608 0.215686 0.992157 0 0.980392 0.776471 0.054902 2 50 100 Bs0 0.658823 1 0 0.980392 0.466667 0 2 50 0 %_BS%_0 0.658823 1 0 0.980392 0.466667 0 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 105)(Unnamed gradient 105) 1 2 Bd[<0000000000000000000000000000010101020202030303040404050505050606060707080809090A090A0A0B0B0C0C0D0D0E0F10101111121213141315151517161817191A1A1B1B1C1D1C1D1F1E20212022232324252626272828292A2A2C2C2E2E2F3031313334353536373839393A3C3D3D3E3F40414242444546474748494A4B4D4E4E4F5051525455565657585A5B5C5E5F6161626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F808182><0000000000000000000000000000000000010101020202020202030303030304040504050505060506060707080809080A090A0A0B0B0C0D0D0E0D0E0E0F100F111011121213121415141516161717171918191B1A1B1C1D1C1D1F1E1F20202122232224252626272829292A2B2C2C2D2E2F2F303031323233343536373738393A3B3A3B3D3E3F4041404143444546474848494A4C4D4E4F50515152535354555657585A5A5B5C5D5C5D5E5F606162636465666768696A><0000000000000000000000000000000000010101020202020202030302030304040404040505060606070707080809090A0A0B0B0B0C0C0C0D0D0E0E0F100F1110121112131214131416151618171819181A1B1A1C1D1C1D1E1E1E201F20222122232424252626272829292A2B2C2C2D2E2F2F303132323333343536353738393A393B3C3D3E3F3E3F4142434445444546494A4B4C4C4D4E4E4F51525354555455565758595A5A5B5D5E5F605F5F606162636364656667><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010102020202020203030304040505060606070708090A0A0B0C0D><FFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F7F7F6F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E8E8E7E7E6E5E5E4E4E3E2E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4D4D3D2D2D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8B7B6B5B4B3B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A898887868584><FFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F7F7F7F6F6F5F5F4F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEAEAE9E9E8E8E7E6E6E5E5E4E3E3E2E2E1E0E0DFDEDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4D4D3D2D2D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C3C3C2C1C0BFBFBEBDBCBBBABAB9B8B7B6B6B5B4B3B2B1B0B0AFAEADACABAAA9A9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A99989796959494939291908F8E8D8C8B8A89888786><FFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F6F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E7E7E6E6E5E5E4E3E3E2E2E1E0E0DFDEDEDDDCDCDBDADAD9D8D8D7D6D6D5D4D4D3D2D2D1D0CFCFCECDCDCCCBCACAC9C8C7C7C6C5C4C4C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B3B3B2B1B0AFAEADADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959493929291908F8E8D8C8B8A8988>4 %_Br[0 0 0 0 1 1 1 2 62.6374 0 %_BS%_0 0 0 0 1 1 1 2 62.6374 0 Bs0.42 0 50 100 %_BS%_0.42 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 186)(Unnamed gradient 186) 0 2 Bd[<01020202020203030303040404040404050505050505050606060707070708080809090A0A0A0B0B0C0C0D0D0E0E0E0F0F><2C2B292827252422211F1E1C1B1A1816151312100F0D0C0A09080706040302010000000000000000000000000000000000><F3F3F3F3F3F3F4F4F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F2F0EFEDEBE9E7E6E5E5E5E5E5E6E6E7E8E9EBED>01<CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0.1176474 %_Br[0.058824 0 0.929412 0 1 1 0.117647 2 50 100 %_BS%_0.058824 0 0.929412 0 1 1 0.117647 2 50 100 Bs0.003922 0.172549 0.952941 0 1 0.811765 0.117647 2 50.2544 0 %_BS%_0.003922 0.172549 0.952941 0 1 0.811765 0.117647 2 50.2544 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 188)(Unnamed gradient 188) 0 2 Bd[<4041424344454647494A4B4C4D4E4F5051525455565758595B5C5D5E5F6061626465666768696A6B6D6F707072737475767778797A7B7C7D7E7F80818283858687888A8B8C8D8E8F9091929394><0000000000000000000000000000000000000000000000000000000000000100010203040404050607060708090A0A0A0C0D0C0D0E0F111011121315141517181A191A1B1C1C1D1E1F20202121><CCCDCFD0D1D2D3D4D5D6D8DADBDCDEE0E2E2E5E7E8EAEBEDEFF1F3F3F5F7F9FAFCFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010202><C9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C><E7E6E5E5E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEADADACAB><5756555453525251504F4E4D4C4B4A49484847464544434241403F3F3E3D3C3B3A39383736353534333231302F2E2D2C2B2B2A29282726252423222121201F1E1D1C1B1A191817171615141312>4 %_Br[0.580392 0.129412 1 0.007843 0.486275 0.670588 0.070588 2 50 100 %_BS%_0.580392 0.129412 1 0.007843 0.486275 0.670588 0.070588 2 50 100 Bs0.25098 0 0.8 0 0.788235 0.905882 0.341176 2 50.022 0 %_BS%_0.25098 0 0.8 0 0.788235 0.905882 0.341176 2 50.022 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 225)(Unnamed gradient 225) 0 2 Bd[0<A0A2A3A4A6A7A8A9AAACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBFC0C1C2C3C4C5C6C7C8C9C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDCDDDEDFDFE0E1E2E3E3E4E5E5E6E7E7E8E8E9EAEAEBEBECECEDEDEEEFEFF0F0F1F1F2F2F3F3F4F5F5F6><5C5D5F6062636464656667696A6B6C6D6F70717374747577787A7B7C7E7F818284858786888A8B8D8E909192949597989A9A9B9D9FA0A2A4A5A7A8AAABADAFAEB0B1B3B4B6B7B9BABCBDBFC0C2C2C3C4C6C8CACBCDCFD1D2D4D5D7D7D9DADCDEDFE1E2>01<81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E><838281807F7E7D7D7C7B7A79787776757473727170706F6E6D6C6B6A69686766656463636261605F5E5D5C5B5A59585756565554535251504F4E4D4C4B4A49494847464544434241403F3E3D3C3C3B3A393837363534333231302F2F2E2D2C2B2A2928>4 %_Br[0 0.964706 0.886274 0 1 0.117647 0.156863 2 50 100 %_BS%_0 0.964706 0.886274 0 1 0.117647 0.156863 2 50 100 Bs0 0.627451 0.360784 0 1 0.505882 0.513726 2 50 0 %_BS%_0 0.627451 0.360784 0 1 0.505882 0.513726 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 265)(Unnamed gradient 265) 0 2 Bd[<121313151617181A1A1B1D1D1F2020212323242525272828292A2A2B2C2B2C2D2D2E2E2E2F302F30313031323132323233333333343334343435353535363636373637373737383738><FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><14171A1C1F2224272A2D2F3235373A3C3F414446484B4D50525457595C5E60626467696B6D727477797C7E80828486888A8C8F90929596989B9D9FA1A3A5A8AAACAFB1B2B5B6B8BABC><0000000000000000000000000000000000000000000101010101010202020303030404040506060607070809090A0B0C0D0E0E0F11111213141516161819191A1B1B1C1E1E1F202022><DEDDDDDCDBDBDAD9D9D8D7D7D6D5D5D4D3D3D2D1D1D0CFCFCECDCDCCCBCBCAC9C9C8C7C7C6C5C5C4C3C3C2C1C1C0BFBFBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B3B3B2B1B1B0AFAFAE><0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A09090909090909><838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A>4 %_Br[0.219608 1 0.737255 0.133333 0.682353 0.035294 0.227451 2 50 100 %_BS%_0.219608 1 0.737255 0.133333 0.682353 0.035294 0.227451 2 50 100 Bs0.070588 0.996078 0.078431 0 0.870588 0.058824 0.513726 2 50 0 %_BS%_0.070588 0.996078 0.078431 0 0.870588 0.058824 0.513726 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 726)(Unnamed gradient 726) 0 2 Bd[<B1B1B2B3B4B4B5B5B6B7B7B8B9BABABBBCBDBEBEBFC0C0C1C1C2C3C3C4C4C5C5C5C6C6C7C7C8C8C8C9C9CACACBCBCCCCCDCDCECECECFCFCFCFD0D0D1D1D1D2D2D2D2D3D3D3D3D4D4D4D5D5D5D6D6D6D7D7D7D7D7D7D8D8D8D8D9D9D9DADADADADBDBDBDCDCDCDCDCDCDCDCDDDDDDDDDDDEDE><4F51535456585A5C5E6061636566686A6B6D6F707273757778797B7C7E7F81828384868788898B8C8D8E8F9091939495969798999A9B9C9D9D9FA0A1A2A2A3A4A5A6A7A8A9AAAAABACACADADAEAFAFB0B1B1B2B3B3B4B4B5B5B6B6B6B7B7B8B9B9BABABBBBBBBCBCBDBDBDBEBEBEBFBFBFBF>000<9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA>4 %_Br[0.870588 0.74902 0 0 0 0.168627 0.980392 2 50 100 %_BS%_0.870588 0.74902 0 0 0 0.168627 0.980392 2 50 100 Bs0.694118 0.309804 0 0 0 0.615686 0.996078 2 50 0 %_BS%_0.694118 0.309804 0 0 0 0.615686 0.996078 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 729)(Unnamed gradient 729) 0 2 Bd[<0E0D0E0D0D0D0D0D0D0C0D0C0C0B0C0B0B0A0B0A0A090A090908080807070707060606050505040403030302010201000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><A1A2A3A5A6A8A9AAABADADAFB0B2B3B4B5B7B7B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D1D2D3D4D5D5D6D7D8D9DADBDCDDDDDEDFE0E0E1E2E3E4E4E5E6E7E7E8E9EAEAEBEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F3F4F4F4F4F5F5F5F6F6F6F6><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010102040505060809090B0C0E0E1012131315171A191C1E202021>01<77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474645444342413F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09><D2D1D1D0CFCECECDCCCBCBCAC9C8C8C7C6C5C5C4C3C2C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A9A999897979695949493929191908F8E8E8D8C8B8B8A898888878685858483828281>4 %_Br[0 0.964706 0.129412 0 1 0.035294 0.505882 2 50 100 %_BS%_0 0.964706 0.129412 0 1 0.035294 0.505882 2 50 100 Bs0.054902 0.631373 0 0 1 0.466667 0.823529 2 50 0 %_BS%_0.054902 0.631373 0 0 1 0.466667 0.823529 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 731)(Unnamed gradient 731) 0 2 Bd[<696A6B6C6D6E6F70717273747575767778797A7B7C7C7D7E7F808182828384858586878889898A8B8C8D8E8F909091929394949596979898999A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A8A8A9AAAAABACACADAEAFAFB0B1B2B2B3B4B5B5B6B6B7B8B8B9BABABBBBBCBDBDBEBEBFC0C1C1><BFC0C0C1C2C2C2C2C3C3C3C3C4C4C4C4C4C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9CAC9C9CACACACACACACACACACACACACACACACACBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCD>00<D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362><4746464544444343424141403F3F3E3E3D3C3C3B3A3A393838373736353534333332323130302F2E2E2D2C2C2B2B2A292928272726252524242322222120201F1E1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A090808070606050404030302010100><FEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F0F0F0F0>4 %_Br[0.756863 0.803922 0 0 0.384314 0 0.941176 2 50 100 %_BS%_0.756863 0.803922 0 0 0.384314 0 0.941176 2 50 100 Bs0.411765 0.74902 0 0 0.823529 0.278431 0.996078 2 50.0987 0 %_BS%_0.411765 0.74902 0 0 0.823529 0.278431 0.996078 2 50.0987 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp8 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 6 Bd[<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br[0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (New Gradient Swatch 2)(New Gradient Swatch 2) 0 2 Bd[<1A1A19191818171717161615151414141313121211111210100F0F0E0E0D0D0D0B0B0A0A090909080807070505050404030302020201010000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFCFCFBFBFAF9F9F8F7F7F6F5F5F4F3F2F2F2F1F0EFEEEEEDECEBEAE9E8E8E7E6E5E5E4E4E3E2E1E0DFDEDEDDDCDBDAD9D8D8D7D6D6D5D4D3D2D1D0D0CFCECDCCCBCBCAC9C8C7C6C5C4><ACAAA8A5A3A19F9D9A989593918F8C8A888684817F7D7A787573716E6C6A686663615F5D5B59575553514F4D4B494745413F3D3B3A38363432302F2D2B2A2826252321201E1D1B1A181615131211100F0E0C0B0A090806060403030201010000><030303030303020202020202020101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><D6D6D7D7D8D8D9D9D9DADADBDBDCDCDCDDDDDEDEDFDFDFE0E0E1E1E2E2E3E3E3E4E4E5E5E6E6E6E7E7E8E8E9E9E9EAEAEBEBECECECEDEDEEEEEFEFEFF0F0F1F1F2F2F2F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9F9FAFAFBFBFCFCFCFDFDFEFEFFFF><090A0B0C0D0E0F10101112131415161718191A1B1C1D1E1F1F202122232425262728292A2B2C2D2E2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4C4D4E4F505152535455565758595A5B5B5C5D5E5F606162><4748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757678797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7>4 %_Br[0 0.768627 0 0 1 0.384314 0.654902 2 50 100 %_BS%_0 0.768627 0 0 1 0.384314 0.654902 2 50 100 Bs0.101961 1 0.67451 0.011765 0.839216 0.035294 0.278431 2 50 0 %_BS%_0.101961 1 0.67451 0.011765 0.839216 0.035294 0.278431 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (New Gradient Swatch 3)(New Gradient Swatch 3) 0 2 Bd[<4041424344454647494A4B4C4D4E4F5051525455565758595B5C5D5E5F6061626465666768696A6C6D6F707072737475767778797A7B7C7D7E7F80818283858687888A8B8C8D8E8F9091929394><0000000000000000000000000000000000000000000000000000000000000100010203040404050607060708090A0A0A0C0D0C0D0E0F111011121315141517181A191A1B1C1C1D1E1F20202121><CCCDCFD0D1D2D3D4D5D6D8DADBDCDEE0E2E2E5E7E8EAEBEDEFF1F3F4F5F7F9FAFCFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010202><C9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C><E7E6E5E5E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0C0BFBEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B1B0AFAEADADACAB><5756555453525251504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353534333231302F2E2D2C2B2B2A29282726252423222121201F1E1D1C1B1A191817171615141312>4 %_Br[0.580392 0.129412 1 0.007843 0.486275 0.670588 0.070588 2 50 100 %_BS%_0.580392 0.129412 1 0.007843 0.486275 0.670588 0.070588 2 50 100 Bs0.25098 0 0.8 0 0.788235 0.905882 0.341176 2 50 0 %_BS%_0.25098 0 0.8 0 0.788235 0.905882 0.341176 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (New Gradient Swatch 6)(New Gradient Swatch 6) 0 2 Bd[<E6E5E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDBDADAD9D9D9D8D7D7D6D6D6D5D5D4D4D4D3D3D2D1D1D0D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C7C7C6C6C5C5C4C4C3C3C2C1C1><C9C8C8C7C6C5C5C4C3C2C2C1C0BFBEBDBCBBBABAB9B8B7B7B6B5B4B3B2B1B0AFAEADACABABA9A9A7A6A5A4A3A2A1A09F9E9D9B9A99989695949392908F8E8D8C8B8988878685848381807F7E7C7B7A7877>000<35363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586><D4D5D5D6D6D7D7D8D8D9D9DADADBDCDCDDDDDEDEDFDFE0E0E1E1E2E3E3E4E4E5E5E6E6E7E7E8E8E9EAEAEBEBECECEDEDEEEEEFEFF0F0F1F2F2F3F3F4F4F5F5F6F6F7F7F8F9F9FAFAFBFBFCFCFDFDFEFEFF>4 %_Br[0.756863 0.466667 0 0 0 0.52549 1 2 50 100 %_BS%_0.756863 0.466667 0 0 0 0.52549 1 2 50 100 Bs0.901961 0.788235 0 0 0 0.207843 0.831373 2 50 0 %_BS%_0.901961 0.788235 0 0 0 0.207843 0.831373 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 6 Bd[0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br[0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 107)(Unnamed gradient 107) 1 2 Bd[<000000000000000000000001010102020303040405050505060607070808090A090A0A0B0C0C0D0E0E101111121313131416171617191A1A1B1C1C1E1D1E20212123242425262728292A2B2C2C2D2F3031333435363738393A3B3C3D><00000000000000000000000000000101020202020203020303040504050506050607070808090A090B0B0B0C0D0C0D0E0F0E0F1111111213141314151617181818191A1C1C1C1D1D1E1F20212223242425262728292A2B2C2D2E2F30><0000000000000000000000000000010101020102020303030304040404050506060607070809090A090A0C0B0C0E0D0E0E100F10111112121313141516171618191A1A1A1A1C1D1E1F1F1F2020212224252627272829292A2B2C2D2E>0<FFFFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F2F2F1F1F0EFEFEEEDEDECEBEBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDEDEDDDCDBDAD9D8D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1><FFFFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFAFAF9F9F9F8F8F7F7F6F5F5F4F4F3F3F2F1F1F0F0EFEEEEEDECECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDDDCDCDBDAD9D8D7D7D6D5D4D3D2D1D0CFCECECDCCCBCAC9C8C7C6C5C4C3C2><FFFFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEAEAE9E8E7E7E6E5E5E4E3E2E2E1E0DFDEDEDDDCDBDADAD9D8D7D6D5D4D4D3D2D1D0CFCECDCCCCCBCAC9C8C7C6C5C4>4 %_Br[0 0 0 0 1 1 1 2 62.6374 0 %_BS%_0 0 0 0 1 1 1 2 62.6374 0 Bs0.72 0 50 100 %_BS%_0.72 0 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Offset Squares Pattern)(Offset Squares Pattern) 0 0 55.0781 55.0801 [%AI3_Tile(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 55.0801 L55.0781 55.0801 L55.0781 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR26.1436 52.3262 m26.1436 29.4307 L3.03125 29.4307 L3.03125 52.3262 L26.1436 52.3262 Lf25.0264 50.123 m5.89063 50.123 L5.89063 32.4961 L25.0264 32.4961 L25.0264 50.123 Lf*U*u5.89063 50.123 m25.0264 50.123 L25.0264 32.4961 L5.89063 32.4961 L5.89063 50.123 Ln10.0313 34.2578 m24.1338 34.2578 L24.1338 48.3613 L10.0313 48.3613 L10.0313 34.2578 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR22.4082 48.793 m8.30566 48.793 L8.30566 34.6895 L22.4082 34.6895 L22.4082 48.793 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR52.6943 24.7852 m52.6943 1.67578 L28.9355 1.67578 L28.9355 24.7852 L52.6943 24.7852 Lf47.6777 22.582 m30.0527 22.582 L30.0527 4.95703 L47.6777 4.95703 L47.6777 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR30.0527 22.582 m50.6982 22.582 L50.6982 4.95703 L30.0527 4.95703 L30.0527 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR47.4199 21.252 m32.2393 21.252 L32.2393 6.50293 L47.4199 6.50293 L47.4199 21.252 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR27.5391 27.5391 m27.5391 0 L0 0 L0 27.5391 L27.5391 27.5391 Lf25.4316 26.1445 m2.75293 26.1445 L2.75293 2.16992 L25.4316 2.16992 L25.4316 26.1445 Lf*U*u4.95605 7.40039 m22.582 7.40039 L22.582 25.0273 L4.95605 25.0273 L4.95605 7.40039 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR22.582 5.67383 m4.95605 5.67383 L4.95605 25.0273 L22.582 25.0273 L22.582 5.67383 Lf20.3887 21.3281 m7.58105 21.3281 L7.58105 10.0313 L20.3887 10.0313 L20.3887 21.3281 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR6.93555 8.73633 m21.0371 8.73633 L21.0371 22.8379 L6.93555 22.8379 L6.93555 8.73633 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR55.0781 55.0801 m55.0781 27.5391 L27.5391 27.5391 L27.5391 55.0801 L55.0781 55.0801 Lf52.3252 50.9688 m30.292 50.9688 L30.292 28.9355 L52.3252 28.9355 L52.3252 50.9688 Lf*U*u30.292 50.9688 m52.3252 50.9688 L52.3252 28.9355 L30.292 28.9355 L30.292 50.9688 Ln32.4951 30.0527 m50.1221 30.0527 L50.1221 47.6777 L32.4951 47.6777 L32.4951 30.0527 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR50.1221 30.0527 m32.4951 30.0527 L32.4951 48.9727 L50.1221 48.9727 L50.1221 30.0527 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa 0 0.901961 0 0 1 0.2 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR34.9063 33.749 m49.0078 33.749 L49.0078 47.8506 L34.9063 47.8506 L34.9063 33.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7907.8833 8403.1523 m-7816.0479 8403.1523 L-7816.0479 8398.873 L-7907.8833 8398.873 L-7907.8833 8403.1523 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7907.6631 8400.4727 m-7908 8400.5391 -7907.4814 8400.7285 -7907.8833 8400.5859 C-7907.8379 8400.4678 -7907.7725 8400.3789 -7907.6631 8400.4727 Cf-7817.1675 8400.6387 m-7818.2529 8401.4014 -7819.6816 8400.6309 -7820.8701 8401.1172 C-7821.0098 8401.1494 -7820.8354 8400.6992 -7821.1484 8400.7998 C-7822.3008 8401.3926 -7824.1162 8401.0391 -7825.5195 8400.582 C-7825.4346 8400.4639 L-7825.7021 8400.3789 -7826.0283 8400.7695 -7826.3115 8400.7148 C-7826.3135 8400.6367 -7826.2207 8400.6035 -7826.2861 8400.4951 C-7826.3574 8400.7324 -7826.7979 8400.6055 -7826.9189 8400.7813 C-7827.0303 8400.6895 -7827.0195 8400.502 -7827.1641 8400.3975 C-7827.3262 8400.667 L-7827.7769 8401.3066 -7828.4209 8400.623 -7829.0361 8400.9531 C-7829.0063 8400.8906 -7828.9453 8400.8418 -7828.9941 8400.7813 C-7829.9814 8401.1699 -7831.2168 8401.0967 -7832.3208 8401.2402 C-7832.2769 8401.1455 -7832.2363 8400.9727 -7832.3008 8400.8652 C-7832.3555 8401.1484 -7832.6963 8401.2197 -7832.9922 8401.2754 C-7833.1255 8400.9844 -7833.4995 8401.541 -7833.8467 8401.3799 C-7833.8169 8401.3164 L-7834.0732 8401.6211 -7834.1973 8401.1406 -7834.4053 8401.5059 C-7834.5684 8401.2773 L-7834.6807 8401.6875 -7834.9395 8401.0645 -7835.1514 8401.2734 C-7835.1445 8401.3574 L-7835.3442 8401.457 -7835.4482 8401.251 -7835.6338 8401.3203 C-7835.6514 8401.2734 L-7836.0854 8401.3799 -7836.3379 8401.1523 -7836.3271 8401.4727 C-7836.4795 8401.2158 -7835.9063 8401.3555 -7836.1455 8400.9814 C-7837.5732 8401.3125 -7839.0459 8401.2471 -7840.4834 8401.2539 C-7840.6465 8401.125 -7840.7505 8401.0859 -7840.7871 8400.9639 C-7840.9307 8401.0293 -7841.3281 8401.0234 -7841.4585 8401.1875 C-7841.4102 8401.1807 -7841.5513 8401.0234 -7841.6274 8401.0078 C-7841.8887 8400.8867 -7841.9131 8401.3594 -7842.2002 8401.2158 C-7842.0859 8401.1309 -7842.0469 8401.0273 -7842.0854 8400.9082 C-7842.3301 8401.1582 -7842.6577 8401.1182 -7842.9473 8401.1992 C-7842.9023 8401.1455 -7842.8325 8401.1133 -7842.8433 8401.0127 C-7843.1602 8401.2959 -7843.4209 8400.9531 -7843.6982 8401.1318 C-7843.5947 8400.9473 L-7844.0415 8400.7227 -7843.7266 8401.334 -7844.1128 8401.2012 C-7844.02 8401.1426 -7844.0527 8401.0703 -7844.0361 8400.9951 C-7844.3965 8401.3311 -7844.9795 8401.2197 -7845.3389 8401.334 C-7845.3174 8401.3086 -7845.3232 8401.2578 Y-7845.7148 8401.2998 -7846.1245 8401.1953 -7846.5552 8401.3418 C-7846.7119 8401.2598 -7846.5039 8400.8906 -7846.9185 8400.959 C-7846.9033 8401.3301 -7847.6221 8401.1113 -7847.3779 8401.5313 C-7847.7319 8401.4707 -7848.2925 8401.3311 -7848.5283 8401.457 C-7848.3691 8401.3164 -7848.7007 8401.0039 -7848.4063 8400.9727 C-7848.6289 8400.7471 L-7848.5957 8400.5957 -7848.3999 8400.7988 -7848.4707 8400.6074 C-7848.6182 8400.623 -7849.0479 8400.7695 -7849.1797 8400.709 C-7849.4531 8400.9365 -7849.7041 8401.3613 -7850.1465 8401.4082 C-7849.9385 8401.2637 -7850.2646 8400.999 -7850.1235 8400.9355 C-7850.7407 8401.6455 L-7850.8877 8401.6631 -7850.7725 8401.3535 -7850.9854 8401.4502 C-7850.9746 8401.5479 -7851.0674 8401.6094 -7851.1318 8401.6895 C-7851.1875 8401.6455 -7851.7441 8401.7813 -7851.8081 8401.415 C-7851.8735 8401.2734 -7851.5684 8401.3398 -7851.7314 8401.209 C-7852.0029 8401.2119 -7852.0151 8401.3379 -7852.2871 8401.3438 C-7852.2925 8401.2949 L-7852.4717 8401.2402 -7852.8213 8401.4502 -7852.6265 8401.6523 C-7852.5015 8401.6631 -7852.6738 8401.4326 -7852.4888 8401.5391 C-7852.6152 8401.751 -7852.9312 8401.8105 -7853.2031 8401.8135 C-7853.1104 8401.7559 -7853.1216 8401.6582 -7853.0845 8401.5547 C-7853.4497 8401.8418 -7853.8369 8401.9326 -7854.2451 8402.0527 C-7854.2515 8402.2266 -7854.0928 8401.7363 -7854.0327 8401.8281 C-7854.5557 8401.5869 -7855.1128 8402.1699 -7855.5479 8401.8174 C-7855.4766 8401.7871 -7855.5098 8402.0645 -7855.5146 8402.0156 C-7855.7666 8401.9941 -7855.7549 8401.7422 -7855.9189 8401.835 C-7855.9355 8401.6875 -7856.1255 8401.8828 -7856.2944 8401.9277 C-7856.3818 8402.0342 -7856.3384 8401.8555 -7856.1914 8401.8398 C-7856.4268 8401.9639 -7857.3691 8402.1914 -7857.9131 8401.9766 C-7857.9023 8402.0742 -7858.2471 8402.335 -7858.3721 8402.3242 C-7858.3232 8402.0957 L-7858.4375 8401.959 -7858.7422 8402.1152 -7858.7632 8401.9199 C-7859.0303 8402.1973 -7857.7344 8401.6836 -7858.0957 8401.8975 C-7858.1895 8401.707 -7858.5991 8402.2617 -7858.5215 8401.9502 C-7858.7725 8401.959 -7859.0161 8402.2158 -7859.2559 8402.002 C-7859.1865 8402.0391 -7859.0522 8401.6846 -7859.2549 8401.7012 C-7859.6123 8401.7422 -7859.3564 8401.8105 -7859.6465 8401.8867 C-7859.8281 8401.9805 L-7859.8398 8402.2031 -7860.1475 8401.9502 -7860.0146 8402.1992 C-7860.0586 8402.0156 -7860.5337 8402.3125 -7860.4971 8401.9434 C-7860.4473 8401.6523 L-7860.6016 8401.6738 -7860.7002 8401.959 -7860.8213 8402.0869 C-7860.8418 8402.0605 -7860.8823 8402.002 -7860.8745 8401.9551 C-7860.8994 8402.4004 -7861.2432 8401.918 -7861.4268 8402.2617 C-7861.7505 8402.1074 -7862.2495 8402.2471 -7862.4023 8401.9707 C-7862.6514 8402.1055 -7862.8784 8402.2646 -7863.1621 8402.1699 C-7863.1055 8402.1279 -7863.0283 8402.1152 -7863.0122 8402.0195 C-7863.1904 8401.8887 -7863.2344 8402.0059 -7863.3975 8402.0781 C-7863.3608 8402.0117 -7863.7539 8401.8174 -7863.9521 8401.6602 C-7864.1992 8401.793 -7864.1143 8402.0332 -7864.1392 8402.1797 C-7864.3652 8401.7402 -7864.8379 8402.4629 -7865.1211 8402.0645 C-7865.0352 8402.0039 -7864.7598 8401.8486 -7864.9658 8401.7383 C-7865.1919 8401.2998 -7865.4219 8402.0615 -7865.7861 8401.8516 C-7865.6968 8402.2158 L-7865.8594 8401.9902 -7866.2334 8402.4277 -7866.1963 8402.0566 C-7866.3184 8402.1875 -7866.6265 8401.9355 -7866.5859 8402.291 C-7867.1846 8401.9902 -7868.0425 8402.4727 -7868.4102 8401.835 C-7868.4961 8401.8945 -7868.7104 8401.834 -7868.6665 8402.0166 C-7868.5239 8402.2148 -7868.4673 8401.875 -7868.4141 8402.0098 C-7868.4912 8402.0205 -7868.5078 8402.1182 -7868.5161 8402.167 C-7868.7021 8402.0859 -7868.8486 8402.0605 -7868.6729 8401.7646 C-7869.0869 8401.5449 -7869.1001 8402.3691 -7869.6274 8402.2295 C-7869.6035 8402.083 -7869.6436 8402.0273 -7869.7979 8402.0508 C-7870.0903 8402.3027 L-7870.4312 8402.2441 -7870.2842 8401.9678 -7870.2925 8401.7188 C-7870.4746 8401.7617 -7870.6973 8401.75 -7870.7803 8401.9355 C-7871.0015 8401.623 L-7870.8398 8401.8486 -7871.1514 8401.7734 -7871.2368 8401.834 C-7871.1514 8401.7734 L-7871.1846 8401.667 -7871.3955 8401.7324 -7871.5024 8401.7637 C-7871.4766 8401.918 -7871.2617 8401.9805 -7871.1445 8402.0254 C-7871.2373 8402.1348 -7871.3823 8402.1094 -7871.5059 8402.2383 C-7871.4648 8401.9941 -7871.8027 8402.0645 -7871.9473 8402.0391 C-7872.1133 8401.9863 -7872.1348 8402.2578 -7872.1831 8402.25 C-7872.1875 8402.123 -7872.4541 8402.2285 -7872.3247 8402.0508 C-7872.2681 8402.0098 -7872.1953 8402.1738 -7872.1016 8402.0615 C-7872.2109 8401.9678 -7872.1982 8401.7471 -7872.4258 8401.9082 C-7872.5967 8402.0293 -7872.3818 8402.3906 -7872.7061 8402.2363 C-7872.6211 8402.1758 -7872.6055 8402.0781 -7872.5391 8401.9902 C-7872.8433 8401.8633 L-7872.8564 8402.0859 L-7872.8975 8402.0293 -7872.8691 8402.0098 -7872.8877 8401.9805 C-7872.9785 8402.2148 -7873.3521 8402.0527 -7873.4209 8402.3164 C-7873.5742 8402.3398 -7873.7441 8402.1621 -7873.8906 8402.1367 C-7873.8623 8402.1172 L-7874.0415 8401.9863 -7874.2793 8402.0723 -7874.4297 8402.2227 C-7874.4219 8402.1738 L-7874.5195 8402.1563 -7874.7505 8402.1914 -7874.8735 8402.3223 C-7875.1201 8402.1543 -7874.9561 8401.4814 -7875.2295 8401.7617 C-7875.48 8401.7695 -7875.6221 8402.1699 -7875.5215 8402.3125 C-7875.9717 8402.1621 -7876.4834 8402.5254 -7876.9009 8402.1797 C-7876.9658 8402.2695 -7876.9248 8402.3262 -7877.0586 8402.3789 C-7877.7197 8402.291 -7878.4551 8402.6426 -7878.9814 8402.2051 C-7878.79 8402.1113 -7878.9688 8401.9814 -7878.9727 8401.8555 C-7879.1309 8402.0547 -7879.1631 8401.6484 -7879.2197 8401.9902 C-7879.2041 8402.1914 -7879.2197 8402.2891 -7879.0337 8402.3701 C-7879.4282 8402.4785 -7880.0283 8402.4785 -7880.2471 8402.291 C-7880.1377 8402.3838 -7880.2227 8402.4453 -7880.3086 8402.5059 C-7880.2803 8402.1846 -7880.5713 8402.1367 -7880.7915 8402.25 C-7880.8223 8402.4453 L-7880.9658 8402.2441 L-7881.0503 8402.3066 -7881.0591 8402.6543 -7881.2773 8402.4668 C-7881.2891 8402.3906 -7881.3018 8402.3135 -7881.3418 8402.2578 C-7881.5693 8402.418 -7881.8906 8402.6895 -7882.1377 8402.5234 C-7882.3398 8402.2383 L-7882.4453 8402.2695 -7882.6235 8402.4414 -7882.4375 8402.5234 C-7882.8594 8402.3516 -7883.1309 8402.3301 -7883.2646 8402.083 C-7883.9912 8402.6846 -7885.0459 8402.709 -7885.8906 8402.666 C-7885.8652 8402.5195 L-7886.0923 8402.3828 -7885.9834 8402.7754 -7886.1416 8402.6738 C-7886.0684 8402.5342 -7886.3145 8402.3701 -7886.1362 8402.1992 C-7886.4609 8402.0449 -7886.5547 8402.4531 -7886.7656 8402.5195 C-7886.7979 8402.7119 -7886.5957 8402.3965 -7886.6367 8402.6406 C-7886.6729 8402.709 -7887.0859 8402.4902 -7887.1362 8402.7813 C-7887.2178 8402.667 -7887.1543 8402.4531 -7887.1104 8402.335 C-7887.3086 8402.4766 L-7887.5513 8402.1367 -7886.7559 8401.8691 -7887.0107 8401.4502 C-7887.1934 8401.4951 L-7887.3682 8401.1914 -7886.71 8401.1523 -7887.1689 8401.0479 C-7887.3682 8401.1914 -7887.5381 8401.6133 -7887.3608 8401.7422 C-7887.7754 8401.8223 -7887.5527 8402.4355 -7887.9985 8402.4111 C-7888.1201 8402.2402 -7887.6416 8402.3701 -7887.7275 8402.1309 C-7887.9375 8401.8965 -7888.1484 8402.2617 -7888.3354 8402.1797 C-7888.1279 8402.2891 -7888.3032 8402.583 -7888.4375 8402.6367 C-7888.6641 8402.499 -7888.29 8402.3613 -7888.6113 8402.3311 C-7888.6641 8402.499 -7888.9595 8402.625 -7888.7041 8402.7422 C-7888.8203 8403.123 -7889.0381 8402.6367 -7889.2129 8402.9316 C-7889.3174 8402.6631 -7888.8823 8402.3125 -7889.2354 8402.1787 C-7889.1792 8402.4365 -7889.6704 8402.5293 -7889.4839 8402.9111 C-7889.6221 8402.8379 -7889.6367 8402.6348 -7889.5361 8402.4766 C-7889.7334 8402.3174 -7890.0151 8402.9473 -7890.0801 8402.4355 C-7890.1479 8402.6992 L-7890.21 8402.6133 -7890.2983 8402.5479 -7890.3994 8402.4063 C-7890.5732 8402.4014 -7890.96 8402.7637 -7890.9443 8402.3652 C-7891 8402.4063 -7891.3975 8402.3887 -7891.2441 8402.6631 C-7890.9971 8402.8311 -7890.96 8402.4629 -7890.8223 8402.835 C-7890.9971 8402.5313 -7891.1787 8402.875 -7891.3213 8402.9766 C-7891.3447 8402.8223 L-7891.4297 8402.8828 -7891.6255 8402.8486 -7891.6787 8403.0156 C-7891.6133 8402.9277 -7891.6475 8402.8223 -7891.7148 8402.7852 C-7891.8042 8403.0195 L-7892.1494 8403.1367 -7891.8857 8402.6074 -7892.2217 8402.6758 C-7891.9663 8402.4941 L-7892.0225 8402.5332 -7892.1367 8402.3135 -7892.2979 8402.3867 C-7892.3604 8402.6006 -7892.4775 8402.8574 -7892.5313 8403.0234 C-7892.7207 8403.1172 -7892.6162 8402.7822 -7892.8027 8403.002 C-7892.5586 8402.7441 L-7892.5215 8402.6738 -7892.7231 8402.3906 -7892.9761 8402.3965 C-7893.1377 8402.4707 -7893.3887 8402.7793 -7893.1338 8402.8965 C-7893.2607 8402.9004 -7893.4385 8402.7695 -7893.3379 8402.6133 C-7893.6255 8402.6875 -7893.2998 8402.8438 -7893.5479 8402.9766 C-7893.6494 8402.834 -7893.9658 8402.6309 -7894.1563 8402.4238 C-7893.8975 8402.0654 L-7894.0693 8402.0615 L-7893.8467 8401.7754 -7894.1826 8401.8438 -7894.0566 8401.541 C-7894.1743 8401.4941 -7894.3169 8401.5967 -7894.4307 8401.6758 C-7894.0864 8402.1602 -7894.8159 8402.3379 -7894.7158 8402.7793 C-7895.1875 8402.9004 -7895.0107 8401.7051 -7895.5024 8402.3965 C-7895.4219 8402.5117 -7895.6533 8402.8477 -7895.3564 8402.7197 C-7895.6494 8402.6719 -7895.5557 8403.1631 -7895.9014 8402.9805 C-7895.6455 8402.7988 -7896.1763 8402.5332 -7895.8066 8402.2695 C-7895.8311 8402.415 -7895.6001 8402.3799 -7895.5435 8402.3398 C-7895.6641 8402.1699 -7895.5186 8401.8945 -7895.8184 8401.8945 C-7896.0015 8401.9365 -7896.2524 8401.9453 -7896.2158 8402.1758 C-7896.2085 8402.4287 -7895.9365 8402.1484 -7896.0537 8402.4043 C-7896.4185 8402.4922 -7896.4795 8402.1074 -7896.6304 8402.5566 C-7896.3999 8402.5205 -7896.3423 8402.7813 -7896.3467 8402.9551 C-7896.6143 8403.0605 L-7896.5625 8402.8926 L-7896.9922 8402.7715 -7896.6895 8403.1973 -7897.1055 8403.1523 C-7897.3008 8402.8203 L-7897.2017 8402.5342 -7896.6953 8402.9473 -7896.7695 8402.4814 C-7897.04 8402.4629 -7897.1299 8402.6992 -7897.3848 8402.5791 C-7897.3281 8402.5391 -7897.2505 8402.5273 -7897.1943 8402.4863 C-7897.2915 8402.4707 -7897.3877 8401.8535 -7897.7734 8402.2148 C-7897.9727 8402.3555 -7897.8262 8402.3799 -7897.8311 8402.5547 C-7898.2656 8402.6074 -7898.3955 8402.7852 -7898.6753 8402.8125 C-7898.6177 8402.4727 -7899.1699 8402.7793 -7898.8608 8402.4316 C-7898.7188 8402.6309 -7898.0903 8402.6113 -7897.9365 8402.2871 C-7898.0947 8401.8838 -7897.5952 8402.3438 -7897.5024 8401.9355 C-7897.8506 8401.9258 -7897.8335 8401.5293 -7897.8896 8401.2695 C-7897.9863 8401.251 -7898.0801 8401.3613 -7898.1377 8401.4014 C-7898.1787 8401.6455 -7898.0522 8401.6426 -7898.0449 8401.8945 C-7898.4336 8401.8281 -7898.8081 8401.9639 -7899.0225 8402.2031 C-7899.1523 8402.082 -7899.1113 8401.8379 -7898.9575 8401.8135 C-7899.4199 8401.8867 -7899.9141 8401.8535 -7900.3535 8401.7793 C-7900.0693 8402.1787 -7900.8433 8401.873 -7900.6494 8402.2051 C-7900.4141 8402.2949 -7900.2119 8402.5791 -7900.3418 8402.7578 C-7900.4888 8402.7324 -7900.3369 8402.583 -7900.3984 8402.498 C-7900.5859 8402.7158 -7900.6895 8402.1484 -7900.8735 8402.4922 C-7900.4512 8402.3633 -7900.7915 8402.0059 -7900.7139 8401.6934 C-7901.0186 8401.8691 -7900.7007 8401.4707 -7901.0024 8401.4707 C-7901.3057 8401.6445 -7901.6787 8401.7813 -7902.0161 8401.8486 C-7902.4399 8401.5527 -7903.0898 8401.8438 -7903.4683 8401.8555 C-7903.6665 8401.6973 -7903.5322 8401.3438 -7903.7471 8401.2822 C-7903.9995 8401.2891 -7903.5601 8401.6631 -7903.9336 8401.502 C-7903.8975 8401.4316 L-7904.0107 8401.5127 -7904.5825 8401.1914 -7904.6929 8401.6992 C-7904.5776 8401.3164 L-7904.6475 8401.2813 -7904.7119 8401.3691 -7904.7695 8401.4102 C-7904.7725 8401.2852 -7904.8535 8401.1719 -7904.7402 8401.0898 C-7904.9707 8400.8262 -7905.2241 8401.1318 -7905.4746 8401.1426 C-7905.3135 8401.3691 L-7905.7422 8401.5469 -7906.0293 8401.3223 -7906.4443 8401.4014 C-7906.4316 8401.1797 L-7906.6787 8401.3125 L-7906.6182 8401.0967 -7906.8447 8400.959 -7906.9751 8401.1387 C-7906.3335 8400.5957 L-7906.1553 8400.7266 -7906.5283 8400.8633 -7906.4165 8401.082 C-7906.3213 8401.2734 -7905.9375 8401.2119 -7905.8755 8400.999 C-7906.0225 8400.9746 -7906.0293 8401.0234 -7906.1436 8401.1035 C-7906.1919 8400.7949 -7905.9688 8400.8066 -7905.8584 8400.6006 C-7905.9355 8400.6133 -7906.0449 8400.5195 -7906.0615 8400.6172 C-7905.9102 8400.4668 -7905.7578 8400.4434 -7905.5059 8400.4355 C-7905.6763 8400.5566 -7905.4131 8400.627 -7905.4775 8400.7148 C-7905.4575 8400.4434 -7905.2168 8400.3594 -7904.9053 8400.4355 C-7904.6831 8400.75 -7904.3208 8400.2334 -7903.96 8400.3203 C-7904.1064 8400.5957 -7904.2935 8400.8164 -7904.5127 8400.9277 C-7904.2861 8401.0654 -7904.2607 8400.9199 -7904.0337 8401.0586 C-7903.9238 8400.8535 -7903.8457 8400.5391 -7903.5503 8400.4141 C-7903.5342 8400.6172 L-7903.2666 8400.5127 -7903.2666 8400.2119 -7902.9258 8400.2695 C-7902.3418 8400.3691 -7901.7407 8400.3691 -7901.2949 8400.3945 C-7901.2783 8400.5967 L-7901.0303 8400.1631 -7900.4521 8400.4365 -7900.1182 8400.2441 C-7899.5503 8400.4395 -7898.8848 8400.0508 -7898.5938 8400.4004 C-7897.5913 8400.2441 -7896.7148 8400.0918 -7895.6768 8400.166 C-7895.8516 8400.4609 L-7895.6655 8400.2441 -7895.7305 8400.6309 -7895.5479 8400.5869 C-7895.7578 8400.3516 -7895.2949 8400.2813 -7895.1665 8400.1006 C-7894.7041 8400.3301 -7894.1104 8400.0791 -7893.7007 8399.873 C-7893.6846 8400.0762 L-7893.2705 8399.6953 -7892.7759 8400.0293 -7892.2598 8400.0918 C-7892.2007 8400.1758 -7892.1074 8400.3662 -7891.9536 8400.3438 C-7891.6738 8400.0156 -7891.5273 8400.0391 -7891.1167 8399.834 C-7890.8169 8399.834 -7890.3301 8399.915 -7890.0254 8400.043 C-7888.8975 8399.582 -7887.7456 8399.877 -7886.5732 8399.5996 C-7886.4888 8399.8379 L-7885.3521 8399.3281 -7883.9541 8399.791 -7882.9839 8399.5293 C-7883.0776 8399.9365 L-7882.7734 8400.0615 -7882.3843 8399.8301 -7882.4619 8399.541 C-7882.1567 8399.666 -7881.7007 8399.3438 -7881.5068 8399.6787 C-7881.1953 8399.7539 -7881.1255 8399.4902 -7880.8662 8399.4355 C-7880.2422 8399.5898 -7880.0107 8399.5547 -7879.4224 8399.4785 C-7879.5684 8399.4531 L-7879.6328 8399.543 -7879.6387 8399.7158 -7879.4922 8399.7422 C-7879.2725 8399.6279 -7878.6846 8399.8516 -7878.9033 8399.3652 C-7878.2754 8399.6455 -7877.4385 8399.1367 -7876.8271 8399.5156 C-7876.8789 8399.3828 -7876.7246 8399.3574 -7876.6602 8399.2676 C-7876.1089 8399.2617 -7875.5293 8399.5332 -7875.0898 8399.3066 C-7875.0024 8399.373 -7875.2295 8399.5332 -7875.0049 8399.5469 C-7874.8721 8399.4951 -7875.0024 8399.373 -7874.8384 8399.2988 C-7873.9453 8399.0508 -7873.0303 8399.5547 -7872.2188 8399.4902 C-7870.7754 8399.2334 -7869.2695 8399.3633 -7867.8867 8399.3203 C-7867.9023 8399.418 L-7867.4395 8399.0449 -7866.8159 8399.7998 -7866.4463 8399.2383 C-7866.3369 8399.3311 -7866.0283 8399.2822 -7866.1094 8399.4707 C-7865.7407 8399.207 -7865.0771 8399.7188 -7864.5439 8399.3838 C-7864.5928 8399.375 -7864.6211 8399.3945 -7864.6777 8399.4365 C-7864.1392 8399.6523 -7863.6641 8399.3574 -7863.0957 8399.5527 C-7863.1533 8399.5947 -7863.2583 8399.625 -7863.2754 8399.7227 C-7863.0557 8399.9102 -7862.7549 8399.3105 -7862.6348 8399.7813 C-7862.5088 8399.7773 -7862.5449 8399.5449 -7862.6221 8399.5586 C-7861.3779 8399.7422 -7860.0498 8399.4414 -7858.7549 8399.334 C-7857.8271 8399.6152 -7858.6982 8400.127 -7857.9663 8399.7754 C-7857.9063 8399.8662 -7857.9229 8399.5957 -7857.9131 8399.6934 C-7857.6299 8399.5615 -7857.4717 8400.2188 -7857.2754 8399.9727 C-7857.3564 8399.6836 -7857.1445 8399.8105 -7857.1387 8399.6348 C-7856.5713 8399.8223 -7856.4575 8400.083 -7856.0098 8399.8633 C-7856.0435 8400.0156 L-7855.5186 8399.5859 -7854.9102 8399.8164 -7854.4673 8399.3203 C-7851.5728 8399.2295 -7848.7983 8398.9551 -7845.9761 8398.8975 C-7843.1865 8398.9922 -7840.4551 8398.7695 -7837.6221 8399.0332 C-7836.9585 8399.4326 -7836.9087 8399.4219 -7836.1797 8399.2598 C-7836.2095 8399.3242 -7836.2549 8399.3398 -7836.2061 8399.4004 C-7836.1699 8399.0723 -7835.6929 8399.3691 -7835.6235 8399.0566 C-7834.5762 8399.1172 -7833.6113 8399.0273 -7832.5337 8399.0254 C-7832.7041 8399.0605 -7832.7896 8399.3281 -7832.5869 8399.3066 C-7832.3755 8399.0967 L-7832.3408 8399.1895 L-7832.2021 8399.1406 -7832.0513 8398.9785 -7832.1943 8398.873 C-7829.4873 8398.5898 -7826.8242 8399.2471 -7824.1729 8399.167 C-7823.5439 8399.3037 -7822.6475 8399.1787 -7821.9629 8399.1113 C-7819.9355 8399.5479 -7818.1084 8399.9014 -7816.0479 8399.5957 C-7816.3174 8400.4434 -7817.1675 8400.6387 Vf-7907.2578 8400.4395 m-7907.1855 8400.6035 -7906.9497 8400.6934 -7907.1377 8400.9111 C-7907.1611 8400.7578 -7907.2822 8400.5859 -7907.2578 8400.4395 Cf-7900.9619 8402.127 m-7900.9536 8402.0781 -7900.8721 8402.1934 -7900.8521 8402.2197 C-7900.9297 8402.2324 -7901.0024 8402.3701 -7901.0645 8402.2852 C-7900.9854 8402.2734 -7900.9976 8402.1953 -7900.9619 8402.127 Cf-7899.3521 8402.2246 m-7899.3765 8402.3701 -7899.7207 8402.4863 -7899.9238 8402.5039 C-7899.3521 8402.2246 Lf-7897.8521 8402.8262 m-7897.7227 8402.9492 -7897.7583 8403.0166 -7897.9326 8403.0127 C-7897.9453 8402.9355 -7897.8877 8402.8965 -7897.8521 8402.8262 Cf-7897.7456 8402.4941 m-7897.6211 8402.4902 -7897.5591 8402.5762 -7897.4985 8402.6602 C-7897.5029 8402.5342 -7897.7871 8402.7383 -7897.7456 8402.4941 Cf-7894.4893 8402.918 m-7894.4111 8402.9063 -7894.2417 8402.7852 -7894.1689 8402.9473 C-7894.2505 8402.834 -7894.5498 8403.1318 -7894.4893 8402.918 Cf-7892.9761 8402.6973 m-7892.9272 8402.707 -7892.9072 8402.7334 -7892.8506 8402.6934 C-7892.7607 8402.7598 -7892.8555 8402.8662 -7892.9312 8402.8799 C-7892.9761 8402.6973 Lf-7865.4287 8402.1113 m-7865.5923 8402.1836 L-7865.5684 8402.0391 L-7865.4287 8402.1113 Lf-7853.3574 8402.1035 m-7853.1943 8402.0117 -7853.2441 8402.2402 -7853.2168 8402.2617 C-7853.3643 8402.2773 -7853.1621 8402.082 -7853.3574 8402.1035 Cf-7846.8486 8401.375 m-7846.8984 8401.3789 L-7846.8818 8401.0791 L-7846.8486 8401.375 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Offset Squares Pattern)PcBb2 (New Gradient Swatch 6) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 6)PcBb2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 1)PcBb2 (New Gradient Swatch 3) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 3)PcBb2 (New Gradient Swatch 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 2)PcBb2 (New Gradient Swatch 4) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 4)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(R=241 G=241  B=242)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A1 Ap0 O0 J 0 j 1 w 4 M []0 d0 XR481.4717 16.4219 m107.9751 16.4219 L107.9751 401.0303 L481.4717 401.0303 L481.4717 16.4219 LBb0 0 0 0 Bh1 (Unnamed gradient 105) 314.0508 203.2266 -134.8678 425.5555 0.947733 0 0 0.900483 406.173 813.3415 Bg-284.5266 -271.5916 -285.8425 270.3413 290.4805 205.9219 Bmf0 BBuuu0 Ap234.8359 142.4209 m245.1128 152.7275 L230.9346 166.0039 222.0112 184.8193 221.9722 205.7881 c222.0425 245.96 254.5415 278.4644 294.7285 278.5396 c334.9043 278.4644 367.4014 245.96 367.4736 205.7881 c367.457 194.3633 364.7314 183.6016 360.04 173.9785 C372.7783 166.2939 L378.8008 178.1719 382.2754 191.5586 382.2754 205.7881 c382.2666 254.1504 343.0762 293.3281 294.7285 293.3477 c246.3662 293.3281 207.1807 254.1504 207.1689 205.7881 c207.1787 180.2041 217.3345 158.4316 234.8359 142.4209 CBb1 (Unnamed gradient 225) 328.1416 379.8916 -117.2734 379.3675 -1 0 0 -1 16364.0977 16365.6357 Bg173.8402 337.1932 170.1641 -87.7282 129.3623 107.5732 Xm3739.1392 7252.707 170.1641 -87.7282 -3609.7769 -7145.1338 Bc173.8402 337.1932 170.1641 -87.7282 129.3623 107.5732 Bm3739.1392 7252.707 170.1641 -87.7282 303.2021 444.7666 Bcf0 BBUu252.9399 191.0684 m251.104 195.916 250.7002 200.3076 250.6914 205.7881 c250.73 230.1113 270.3999 249.7749 294.7207 249.8232 c319.0293 249.7749 338.7031 230.1113 338.748 205.7881 c338.7324 196.1094 335.5625 187.1855 330.2578 179.9141 C344.791 166.4053 L353.3359 177.2549 358.4727 190.9053 358.4814 205.7881 c358.4707 240.9966 329.9365 269.5415 294.7207 269.5532 c259.4976 269.5415 230.9624 240.9966 230.9624 205.7881 c230.9624 198.8154 232.1221 192.123 234.1948 185.8369 C252.9399 191.0684 LBb1 (Unnamed gradient 729) 286.0205 279.7808 -126.044 107.9938 -1 0 0 -1 16364.0977 16365.6357 Bg63.5442 87.32 113.5655 -82.6435 202.0483 204.6621 Xm4821.0073 6624.8398 113.5655 -82.6435 -4618.959 -6420.1777 Bc63.5442 87.32 113.5655 -82.6435 202.0483 204.6621 Bm4821.0073 6624.8398 113.5655 -82.6435 265.5928 291.9819 Bcf0 BBUu264.0581 205.6533 m264.0552 205.7695 264.0376 205.8848 264.0376 206.001 c264.0742 222.8003 277.6748 236.4126 294.4834 236.4419 c311.2969 236.4126 324.9023 222.8003 324.9375 206.001 c324.917 195.3984 319.4941 186.0801 311.2852 180.6289 C318.8311 169.4727 L331.0059 177.3242 338.5713 190.4355 338.5781 206.001 c338.5693 230.3442 318.834 250.084 294.4834 250.084 c270.126 250.084 250.3926 230.3442 250.3926 206.001 c250.3926 205.3096 250.4629 204.6416 250.4971 203.9609 C264.0581 205.6533 LBb1 (Unnamed gradient 731) 267.02 255.2876 -123.2234 77.8315 -1 0 0 -1 16364.0977 16365.6357 Bg42.6443 65.1092 84.0609 -55.057 237.3633 214.1021 Xm4481.4834 6842.3223 84.0609 -55.057 -4244.1201 -6628.2207 Bc42.6443 65.1092 84.0609 -55.057 237.3633 214.1021 Bm4481.4834 6842.3223 84.0609 -55.057 280.0073 279.2114 Bcf0 BBUu358.0879 205.7881 m358.0264 170.791 329.7168 142.4795 294.7188 142.4209 c259.7183 142.4795 231.4106 170.791 231.3472 205.7881 c231.3564 211.25 232.1289 216.5176 233.4321 221.5771 C223.3525 225.0176 L221.6943 218.8711 220.7378 212.4482 220.7378 205.7881 c220.7378 164.9238 253.8525 131.8037 294.7188 131.8037 c335.584 131.8037 368.7002 164.9238 368.7109 205.7881 c368.7002 228.6128 358.3545 249.0054 342.1152 262.5796 C336.6494 253.1758 L349.7461 241.5674 358.0586 224.6704 358.0879 205.7881 cBb1 (Unnamed gradient 265) 302.5459 313.3828 -123.2561 156.9714 -1 0 0 -1 16364.0977 16365.6357 Bg86.0803 131.2638 132.5405 -86.9175 183.5796 168.0166 Xm4499.6367 6861.4917 132.5405 -86.9175 -4316.0571 -6693.4746 Bc86.0803 131.2638 132.5405 -86.9175 183.5796 168.0166 Bm4499.6367 6861.4917 132.5405 -86.9175 269.6602 299.2803 Bcf0 BBUu218.4673 145.9092 m225.8223 152.3516 L214.3457 167.1211 207.437 185.6289 207.3984 205.7988 c207.4863 254.022 246.499 293.0278 294.7285 293.1177 c342.9492 293.0278 381.9551 254.022 382.0479 205.7988 c382.0068 181.6387 372.1943 159.7998 356.3613 144.0078 C364.3496 137.6982 L381.5342 155.2637 392.1582 179.2783 392.1582 205.7988 c392.1582 259.6123 348.5371 303.231 294.7285 303.231 c240.9019 303.231 197.2969 259.6123 197.2876 205.7988 c197.2949 182.6416 204.9897 162.6211 218.4673 145.9092 CBb1 (New Gradient Swatch 4) 153.6567 120.9648 48.814 330.1373 -1 0 0 -1 16364.0977 16365.6357 Bg-217.3973 -248.4534 -159.0691 139.1858 470.1729 253.5288 Xm-5282.5078 -6037.1367 -159.0691 139.1858 5752.6807 6290.6655 Bc-217.3973 -248.4534 -159.0691 139.1858 470.1729 253.5288 Bm-5282.5078 -6037.1367 -159.0691 139.1858 252.7754 5.0752 Bcf0 BBUu197.8613 207.6074 m198.9399 260.2964 241.7891 302.6431 294.7188 302.7495 c307.4902 302.7231 319.6416 300.1758 330.8018 295.6885 C335.0801 306.1626 L322.6055 311.1792 308.9902 313.9731 294.7188 313.9731 c235.6724 313.9629 187.7256 266.6631 186.5898 207.8906 C197.8613 207.6074 LBb1 (Unnamed gradient 186) 222.5205 95.7451 47.6184 283.8572 -1 0 0 -1 16364.0977 16365.6357 Bg-191.3383 -209.6774 -66.5706 60.7481 354.4658 318.6519 Xm-5467.4961 -5991.5361 -66.5706 60.7481 5821.9619 6310.188 Bc-191.3383 -209.6774 -66.5706 60.7481 354.4658 318.6519 Bm-5467.4961 -5991.5361 -66.5706 60.7481 163.1274 108.9746 Bcf0 BBUu417.8223 205.7881 m417.8223 231.2485 410.0869 254.9097 396.8467 274.5415 C385.127 265.3159 L396.3936 248.2339 402.9824 227.7949 403.0186 205.7881 c402.9443 161.3994 376.2666 123.3291 338.0566 106.5928 C345.0791 93.4727 L387.9473 112.7324 417.8184 155.7539 417.8223 205.7881 cBb1 (Unnamed gradient 188) 225.8862 373.894 -117.2734 290.7922 -1 0 0 -1 16364.0977 16365.6357 Bg133.2518 258.4649 74.0064 -38.1541 289.3105 83.8271 Xm3712.9836 7201.9741 74.0064 -38.1541 -3423.6729 -7118.1465 Bc133.2518 258.4649 74.0064 -38.1541 289.3105 83.8271 Bm3712.9836 7201.9741 74.0064 -38.1541 422.5625 342.292 Bcf0 BB192.3223 170.6748 m188.5366 181.6855 186.4419 193.4893 186.4175 205.7881 c186.5 249.3418 212.1787 286.8159 249.2139 304.0215 C241.6953 316.9121 L200.2515 297.0947 171.6191 254.7935 171.6191 205.7881 c171.6191 191.668 174.0288 178.1123 178.4067 165.4824 C192.3223 170.6748 LBb1 (Unnamed gradient 188) 396.0889 295.6826 -117.2734 257.621 -1 0 0 -1 16364.0977 16365.6357 Bg118.0515 228.9813 54.1718 -27.9283 121.0371 161.0439 Xm3792.7612 7356.7163 54.1718 -27.9283 -3671.7241 -7195.6719 Bc118.0515 228.9813 54.1718 -27.9283 121.0371 161.0439 Bm3792.7612 7356.7163 54.1718 -27.9283 239.0884 390.0254 Bcf0 BBUu174.6553 185.8369 m173.5732 192.334 172.9834 198.9893 172.9663 205.7881 c173.0942 273.0317 227.4814 327.4312 294.7285 327.5449 c361.9678 327.4312 416.3516 273.0317 416.4736 205.7881 c416.4092 170.6924 401.541 139.1162 377.7949 116.9121 C380.8965 112.7217 L405.9102 135.8984 421.585 169.0107 421.5898 205.7881 c421.5811 275.8618 364.7852 332.6538 294.7285 332.6538 c224.6572 332.6538 167.8628 275.8618 167.853 205.7881 c167.853 198.5771 168.4893 191.5029 169.6504 184.6152 C174.6553 185.8369 LBb1 (New Gradient Swatch 1) 240.4492 224.7158 -142.6216 220.2571 -1 0 0 -1 16364.0977 16365.6357 Bg175.0259 133.7129 166.106 -217.4273 219.5952 331.3018 Xm6579.7964 5026.707 166.106 -217.4273 -6360.2012 -4695.4053 Bc175.0259 133.7129 166.106 -217.4273 219.5952 331.3018 Bm6579.7964 5026.707 166.106 -217.4273 394.6211 465.0146 Bcf0 BBUu168.5762 197.4941 m168.3901 200.2393 168.2666 202.9961 168.2573 205.7881 c168.3809 275.6313 224.8887 332.1309 294.7305 332.2495 c364.5664 332.1309 421.0674 275.6313 421.1855 205.7881 c421.1338 178.1895 412.2598 152.6914 397.2588 131.9238 C408.3906 121.7764 L425.7793 145.2666 436.0771 174.3174 436.0771 205.7881 c436.0771 283.8584 372.7871 347.1426 294.7305 347.1519 c216.6577 347.1426 153.3691 283.8584 153.3691 205.7881 c153.3691 202.1094 153.5581 198.4775 153.8267 194.876 C168.5762 197.4941 LBb1 (Unnamed gradient 726) 294.1836 292.7676 -125.2172 234.6536 -1 0 0 -1 16364.0977 16365.6357 Bg135.3195 191.7054 250.3803 -176.7365 121.1616 241.6973 Xm4742.9414 6719.2637 250.3803 -176.7365 -4621.7798 -6477.5664 Bc135.3195 191.7054 250.3803 -176.7365 121.1616 241.6973 Bm4742.9414 6719.2637 250.3803 -176.7365 256.481 433.4028 Bcf0 BBUU1 Ap0.74902 0.678431 0.670588 0.901961 0 0 0 Xa328.1846 205.915 m328.1846 187.3984 313.1738 172.3867 294.6582 172.3867 c276.1421 172.3867 261.1309 187.3984 261.1309 205.915 c261.1309 224.4302 276.1421 239.4414 294.6582 239.4414 c313.1738 239.4414 328.1846 224.4302 328.1846 205.915 cf0 0 0 0 1 1 1 Xa344.5518 227.562 m344.5518 218.668 337.3408 211.458 328.4492 211.458 c319.5557 211.458 312.3447 218.668 312.3447 227.562 c312.3447 236.4556 319.5557 243.6675 328.4492 243.6675 c337.3408 243.6675 344.5518 236.4556 344.5518 227.562 cf348.2012 198.5986 m348.2012 193.3516 343.9463 189.0928 338.6982 189.0928 c333.4482 189.0928 329.1943 193.3516 329.1943 198.5986 c329.1943 203.8496 333.4482 208.1016 338.6982 208.1016 c343.9463 208.1016 348.2012 203.8496 348.2012 198.5986 cfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF